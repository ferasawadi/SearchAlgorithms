package com.yafatek;import java.util.logging.Logger;public class ArrayRotateTime {	private static Logger logger = Logger.getLogger(ArrayRotateTime.class.getName());	public static void main(String[] args) {		//TODO		// Call the Method Here		int[] array = {8, 11, 12, 16, 9, 10, 1, 2, 3, 4, 5, 6, 7};		logger.info(String.format("array Rotated:  (%s", findRotationCount(array)) + ") times.");	}	private static int findRotationCount(int[] array) {		int arrayLeft = 0;		int arrayRight = array.length - 1;		while (arrayLeft <= arrayRight) {			if (array[arrayLeft] <= array[arrayRight]) return arrayLeft;			int middle = (arrayLeft + arrayRight) / 2;			// Find previous and Next Elements to the Middle.			int previous = (middle - 1) % array.length;			int next = (middle + 1) % array.length;			// if the Middle Element is less than the next and the Previous Element.			// then its the Minimum Element in the array			if (array[middle] <= array[previous] && array[middle] <= array[next]) return middle;				//if the right is Sorted and the middle is not he minimum element then Pivot element is not				// presented in the right side of the array and we can discard this part				// and search in the left side.			else if (array[middle] <= array[arrayRight]) arrayRight = middle - 1;				// if the left till the middle is sorted				//and middle is not the minimum element then the pivot element is not presented in this part.				// So discard the left side and then search in the right side			else if (array[middle] >= array[arrayLeft]) arrayLeft = middle + 1;		}		return -1;	}}