package com.yafatek;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;public class AmazonExam {	public static void main(String[] args) {		int days = 2;		int[] array = {0, 0, 1, 0, 1, 0, 1, 0};		another(array, days);	}	private static void another(int[] array, int days) {		int leftSide = 1;		for (int i = 0; i < array.length; i++) {			if (leftSide == 1 && i == 1) {				leftSide = array[i + 1];				System.out.println("in");			}		}	}	private static int[] checkCellStatus(int[] array, int days) {		Map<Integer, Integer> cellStat = new HashMap<>();		List<Integer> results = new ArrayList<>();		int leftSide = 1;		int rightSide = 1;		System.out.println(array.length);		for (int i = 0; i <= array.length; i++) {			int nextToIndex = array[i + 1];			if ((leftSide == 1 && nextToIndex == 1) || (leftSide == 0 && nextToIndex == 0)) {				// if array[i] == 1 or == 0 then the next day it will be 0 or 1				leftSide = array[i];				if (days % 2 == 0) results.add(1);				else results.add(0);			}//			else if (leftSide == 0 && nextToIndex == 0){//				leftSide = array[i];//				results.add(0);//				leftSide=array[i];////				if (nextToIndex == array.length && leftSide ==1 && rightSide ==1){////					results.add(0);////					break;////				}//			}//			else leftSide = array[i];		}		int[] num = new int[results.size()];//		results.toArray();		results.forEach(System.out::print);		return num;	}	private static void anotherApproach(int[] array, int days) {		Map<Integer, Integer> visitedNumbers = new HashMap<>();		int leftSide = 1;		int arrayIndex;		for (int i = 0; i <= array.length; i++) {			arrayIndex = i + 1;			if ((leftSide == 1 && arrayIndex == 1) || (leftSide == 0 && arrayIndex == 0)) {//				System.out.println(true);			}//			int delta = target - numbers[i];			if (visitedNumbers.containsKey(arrayIndex)) {				System.out.println(true);//				return new int[]{i, visitedNumbers.get(delta)};			}			visitedNumbers.put(array[i + 1], i);		}	}}